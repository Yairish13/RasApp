[{"C:\\Users\\yairi\\Desktop\\Yair\\Tasks\\RasApp\\client\\src\\App.js":"1","C:\\Users\\yairi\\Desktop\\Yair\\Tasks\\RasApp\\client\\src\\pages\\NotesPage.js":"2","C:\\Users\\yairi\\Desktop\\Yair\\Tasks\\RasApp\\client\\src\\components\\AddSoldierForm.js":"3","C:\\Users\\yairi\\Desktop\\Yair\\Tasks\\RasApp\\client\\src\\components\\OneNote.js":"4","C:\\Users\\yairi\\Desktop\\Yair\\Tasks\\RasApp\\client\\src\\components\\EquipmentRow.js":"5","C:\\Users\\yairi\\Desktop\\Yair\\Tasks\\RasApp\\client\\src\\styledComponents\\nohehutpage.js":"6","C:\\Users\\yairi\\Desktop\\Yair\\Tasks\\RasApp\\client\\src\\components\\PtorRow.js":"7","C:\\Users\\yairi\\Desktop\\Yair\\Tasks\\RasApp\\client\\src\\components\\Navbar.js":"8","C:\\Users\\yairi\\Desktop\\Yair\\Tasks\\RasApp\\client\\src\\pages\\HomePage.js":"9","C:\\Users\\yairi\\Desktop\\Yair\\Tasks\\RasApp\\client\\src\\network.js":"10","C:\\Users\\yairi\\Desktop\\Yair\\Tasks\\RasApp\\client\\src\\pages\\EquipmentsPage.js":"11","C:\\Users\\yairi\\Desktop\\Yair\\Tasks\\RasApp\\client\\src\\styledComponents\\notfound.js":"12","C:\\Users\\yairi\\Desktop\\Yair\\Tasks\\RasApp\\client\\src\\components\\Exams.js":"13","C:\\Users\\yairi\\Desktop\\Yair\\Tasks\\RasApp\\client\\src\\styledComponents\\global.js":"14","C:\\Users\\yairi\\Desktop\\Yair\\Tasks\\RasApp\\client\\src\\components\\CertificationRow.js":"15","C:\\Users\\yairi\\Desktop\\Yair\\Tasks\\RasApp\\client\\src\\pages\\LoginPage.js":"16","C:\\Users\\yairi\\Desktop\\Yair\\Tasks\\RasApp\\client\\src\\components\\Certifications.js":"17","C:\\Users\\yairi\\Desktop\\Yair\\Tasks\\RasApp\\client\\src\\pages\\SoldiersPage.js":"18","C:\\Users\\yairi\\Desktop\\Yair\\Tasks\\RasApp\\client\\src\\components\\Ptors.js":"19","C:\\Users\\yairi\\Desktop\\Yair\\Tasks\\RasApp\\client\\src\\styledComponents\\loginpage.js":"20"},{"size":4416,"mtime":1608827038845,"results":"21","hashOfConfig":"22"},{"size":5101,"mtime":1608825800755,"results":"23","hashOfConfig":"22"},{"size":3147,"mtime":1608825800742,"results":"24","hashOfConfig":"22"},{"size":1048,"mtime":1608776152715,"results":"25","hashOfConfig":"22"},{"size":859,"mtime":1608814649751,"results":"26","hashOfConfig":"22"},{"size":479,"mtime":1608472167269,"results":"27","hashOfConfig":"22"},{"size":937,"mtime":1608776152716,"results":"28","hashOfConfig":"22"},{"size":2693,"mtime":1608826959839,"results":"29","hashOfConfig":"22"},{"size":2080,"mtime":1608826898159,"results":"30","hashOfConfig":"22"},{"size":961,"mtime":1608051630654,"results":"31","hashOfConfig":"22"},{"size":4253,"mtime":1608817643272,"results":"32","hashOfConfig":"22"},{"size":566,"mtime":1608218614462,"results":"33","hashOfConfig":"22"},{"size":3157,"mtime":1608776152713,"results":"34","hashOfConfig":"22"},{"size":4745,"mtime":1608825800773,"results":"35","hashOfConfig":"22"},{"size":675,"mtime":1608776152710,"results":"36","hashOfConfig":"22"},{"size":1769,"mtime":1608203653476,"results":"37","hashOfConfig":"22"},{"size":3808,"mtime":1608776152711,"results":"38","hashOfConfig":"22"},{"size":1614,"mtime":1609077039468,"results":"39","hashOfConfig":"22"},{"size":3758,"mtime":1608818798954,"results":"40","hashOfConfig":"22"},{"size":740,"mtime":1608203653488,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},"11i9ae6",{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"49"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"49"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"49"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\yairi\\Desktop\\Yair\\Tasks\\RasApp\\client\\src\\App.js",["94","95","96","97"],"import React, { useState, useEffect, useContext, lazy } from \"react\";\r\nimport network from \"./network\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  useHistory,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport Navbar from \"./components/Navbar\";\r\n\r\nimport NotFoundPage from './pages/NotFoundPage';\r\nimport HomePage from \"./pages/HomePage\";\r\nimport SoldiersPage from \"./pages/SoldiersPage\";\r\nimport OneSoldierPage from \"./pages/OneSoldierPage\";\r\nimport NotesPage from \"./pages/NotesPage\";\r\nimport NohehutPage from \"./pages/NohehutPage\";\r\nimport EquipmentsPage from \"./pages/EquipmentsPage\";\r\nimport ProfilePage from \"./pages/ProfilePage\";\r\nimport LoginPage from \"./pages/LoginPage\";\r\nimport Cookies from \"js-cookie\";\r\nimport { User } from \"./context\";\r\nimport ErrorBoundary from \"./components/ErrorBoundary\";\r\nimport CalendarPage from './pages/CalendarPage';\r\nimport { loadCldr} from '@syncfusion/ej2-base';\r\n\r\n\r\n\r\n\r\nloadCldr(\r\n    require('cldr-data/supplemental/numberingSystems.json'),\r\n    require('cldr-data/main/he/ca-gregorian.json'),\r\n    require('cldr-data/main/he/numbers.json'),\r\n    require('cldr-data/main/he/timeZoneNames.json')\r\n    );\r\n// const NotFoundPage = lazy(()=> import('./pages/NotFoundPage'))\r\n// const HomePage = lazy(()=> import('./pages/HomePage'));\r\n// const SoldiersPage = lazy(()=> import('./pages/SoldiersPage'));\r\n// const OneSoldierPage = lazy(()=> import('./pages/OneSoldierPage'));\r\n// const NotesPage = lazy(()=> import('./pages/NotesPage'));\r\n// const NohehutPage = lazy(()=> import('./pages/NohehutPage'));\r\n// const ProfilePage = lazy(()=> import('./pages/ProfilePage'));\r\n\r\n\r\nfunction App() {\r\n  const [user, setUser] = useState(null);\r\n\r\n\r\n  // const location = useHistory();\r\n  const checkValidateToken = async () => {\r\n    if (Cookies.get(\"refreshToken\")) {\r\n      try {\r\n        const { data } = await network.get(\"/api/auth/validate-token\");\r\n        console.log(data.user);\r\n        setUser(data.user);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    checkValidateToken();\r\n  }, []);\r\nconsole.log(user)\r\n  return (\r\n    <Router>\r\n      {/* <AppContainer>{getRoutes()}</AppContainer> */}\r\n      {!user ? (\r\n        <User.Provider value={{ user, setUser }}>\r\n          <ErrorBoundary>\r\n            <Route\r\n              render={({ location }) => (\r\n                <Switch location={location} key={location.pathname}>\r\n                  <Route exact path=\"/login\">\r\n                    <LoginPage />\r\n                  </Route>\r\n                  <Route exact path=\"*\">\r\n                    <Redirect to=\"/login\" />\r\n                  </Route>\r\n                </Switch>\r\n              )}\r\n            />\r\n          </ErrorBoundary>\r\n        </User.Provider>\r\n      ) : (\r\n        <User.Provider value={{ user, setUser }}>\r\n          <ErrorBoundary>\r\n            <Switch>\r\n              <Route path=\"/\" exact>\r\n                <Navbar />\r\n                <HomePage />\r\n              </Route>\r\n              <Route path=\"/soldiers\" exact>\r\n                <Navbar />\r\n                <SoldiersPage />\r\n              </Route>\r\n              <Route path=\"/soldier/:soldierId\" exact>\r\n                <Navbar />\r\n                <OneSoldierPage />\r\n              </Route>\r\n              <Route path=\"/notes\" exact>\r\n                <Navbar />\r\n                <NotesPage />\r\n              </Route>\r\n              {(user.roleId === 2 || user.roleId === 6) &&\r\n                <Route path=\"/nohehut\" exact>\r\n                <Navbar />\r\n                <NohehutPage />\r\n              </Route>}\r\n              <Route path=\"/profile\" exact>\r\n                <Navbar />\r\n                <ProfilePage />\r\n                </Route>\r\n              <Route path=\"/notfound\" exact>\r\n                <NotFoundPage />\r\n                </Route>\r\n              <Route path=\"/calendar\" exact>\r\n                <Navbar />\r\n                <CalendarPage />\r\n              </Route>\r\n              <Route path=\"/equipments\" exact>\r\n                <Navbar />\r\n                <EquipmentsPage />\r\n              </Route>\r\n              <Route path=\"*\" exact>\r\n                {/* <NotFoundPage /> */}\r\n                <Redirect to=\"/\" />\r\n              </Route>\r\n            </Switch>\r\n          </ErrorBoundary>\r\n        </User.Provider>\r\n      )}\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n",["98","99"],"C:\\Users\\yairi\\Desktop\\Yair\\Tasks\\RasApp\\client\\src\\pages\\NotesPage.js",["100","101","102","103"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport network from \"../network\";\r\nimport Modal from \"react-modal\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  NotesPageContainer,\r\n  NotesPageInnerContainer,\r\n  AddNoteButton,\r\n} from \"../styledComponents/notespage\";\r\nimport {\r\n  Button,\r\n  Title,\r\n  ModalContainer,\r\n  ModalTitle,\r\n  ModalButtons,\r\n  ModalButton,\r\n  Input,\r\n  Select,\r\n  ModalForm,\r\n} from \"../styledComponents/global\";\r\n// import { Button} from \"@material-ui/core\";\r\nimport NoteAddIcon from \"@material-ui/icons/NoteAdd\";\r\nimport OneNote from \"../components/OneNote\";\r\nimport { useContext } from \"react\";\r\nimport { User } from \"../context\";\r\n\r\n\r\nconst customStyles = {\r\n  content: {\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    right: \"auto\",\r\n    bottom: \"auto\",\r\n    marginRight: \"-50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n  },\r\n};\r\nModal.setAppElement(\"#root\");\r\n\r\nfunction NotesPage({ userId }) {\r\n  const titleRef = useRef(null);\r\n  const contentRef = useRef(null);\r\n  const titleERef = useRef(null);\r\n  const contentERef = useRef(null);\r\n  const [noteToUpdate, setNoteToUpdate] = useState(null);\r\n  const [myNotes, setMyNotes] = useState([]);\r\n  const [modalIsOpen, setIsOpen] = useState(false);\r\n  const [modalEIsOpen, setEIsOpen] = useState(false);\r\n\r\n  const gUser = useContext(User);\r\n  console.log(\"gUser\", gUser);\r\n  function openModal() {\r\n    setIsOpen(true);\r\n  }\r\n  function openEModal() {\r\n    setEIsOpen(true);\r\n    // titleERef.current.value = noteToUpdate ? noteToUpdate.title : \"\" ;\r\n    // contentERef.current.value = noteToUpdate ? noteToUpdate.noteContent : \"\" ;\r\n  }\r\n  function closeModal(bool) {\r\n    bool && createNote(titleRef.current.value, contentRef.current.value);\r\n    setIsOpen(false);\r\n  }\r\n  function closeEModal(bool) {\r\n    bool && updateNote(titleERef.current.value, contentERef.current.value);\r\n    setEIsOpen(false);\r\n  }\r\n  const getNotesByUserId = async () => {\r\n    const { data } = await network.get(`/api/notes`);\r\n    setMyNotes(data);\r\n  };\r\n  const createNote = async (title, noteContent) => {\r\n    console.log(\"creating new note\");\r\n    const newNote = {\r\n      userId: gUser.user.userId,\r\n      title: title,\r\n      noteContent: noteContent,\r\n    };\r\n    const response = await network.post(`/api/notes`, newNote);\r\n    console.log(response);\r\n    getNotesByUserId();\r\n  };\r\n  const updateNote = async (title, noteContent) => {\r\n    console.log(\"updating note\");\r\n    const updateNote = {\r\n      title: title,\r\n      noteContent: noteContent,\r\n    };\r\n    const response = await network.patch(\r\n      `/api/notes/${noteToUpdate.id}`,\r\n      updateNote\r\n    );\r\n    console.log(response);\r\n    getNotesByUserId();\r\n  };\r\n  const handleUpdate = async (id) => {\r\n    console.log(id);\r\n    const { data } = await network.get(`/api/notes/${id}`);\r\n    console.log(data);\r\n    setNoteToUpdate(data);\r\n    openEModal();\r\n  };\r\n  const handleDelete = async (id) => {\r\n    console.log(id);\r\n    const response = await network.delete(`/api/notes/${id}`);\r\n    console.log(response);\r\n    getNotesByUserId();\r\n  };\r\n  useEffect(() => {\r\n    getNotesByUserId();\r\n  }, []);\r\n  return (\r\n    <NotesPageContainer>\r\n      <Title>פתקים</Title>\r\n      <AddNoteButton\r\n        onClick={() => openModal()}\r\n      >{`+ הוסף פתק חדש `}</AddNoteButton>\r\n      <NotesPageInnerContainer>\r\n        {myNotes.map((note, i) => {\r\n          return (\r\n            <OneNote\r\n              note={note}\r\n              key={i}\r\n              handleDelete={handleDelete}\r\n              handleUpdate={handleUpdate}\r\n            />\r\n          );\r\n        })}\r\n      </NotesPageInnerContainer>\r\n      <Modal\r\n        isOpen={modalIsOpen}\r\n        onRequestClose={closeModal}\r\n        style={customStyles}\r\n        contentLabel=\"CreateNote\"\r\n      >\r\n        <ModalContainer>\r\n          <ModalTitle>פתק חדש</ModalTitle>\r\n          <ModalForm>\r\n            <Input ref={titleRef} placeholder=\"כותרת\"></Input>\r\n            <Input ref={contentRef} placeholder=\"תוכן\"></Input>\r\n            <ModalButtons>\r\n              <ModalButton onClick={() => closeModal(true)}>שלח</ModalButton>\r\n              <ModalButton onClick={() => closeModal(false)}>בטל</ModalButton>\r\n            </ModalButtons>\r\n          </ModalForm>\r\n        </ModalContainer>\r\n      </Modal>\r\n      <Modal\r\n        isOpen={modalEIsOpen}\r\n        onRequestClose={closeEModal}\r\n        style={customStyles}\r\n        contentLabel=\"UpdateNote\"\r\n      >\r\n        <ModalContainer>\r\n          <ModalTitle>עדכן פתק</ModalTitle>\r\n          <ModalForm>\r\n            <Input ref={titleERef} placeholder=\"כותרת\"></Input>\r\n            <Input ref={contentERef} placeholder=\"תוכן\"></Input>\r\n            <ModalButtons>\r\n              <ModalButton onClick={() => closeEModal(true)}>עדכן</ModalButton>\r\n              <ModalButton onClick={() => closeEModal(false)}>בטל</ModalButton>\r\n            </ModalButtons>\r\n          </ModalForm>\r\n        </ModalContainer>\r\n      </Modal>\r\n    </NotesPageContainer>\r\n  );\r\n}\r\nexport default NotesPage;\r\n",["104","105"],"C:\\Users\\yairi\\Desktop\\Yair\\Tasks\\RasApp\\client\\src\\components\\AddSoldierForm.js",[],["106","107"],"C:\\Users\\yairi\\Desktop\\Yair\\Tasks\\RasApp\\client\\src\\components\\OneNote.js",["108","109"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  NoteContainer,\r\n  NoteTitle,\r\n  NoteContent,\r\n  NoteButtons,\r\n  NoteUpdateButton,\r\n  NoteDeleteButton,\r\n} from \"../styledComponents/notespage\";\r\nimport DeleteOutlineOutlinedIcon from \"@material-ui/icons/DeleteOutlineOutlined\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n// onClick={()=>history.push(`/notes/${note.id}`)\r\nfunction OneNote({ note, handleUpdate, handleDelete }) {\r\n  console.log(note);\r\n  return (\r\n    <NoteContainer>\r\n      <NoteTitle>{note.title}</NoteTitle>\r\n      <NoteContent>{note.noteContent}</NoteContent>\r\n      <NoteButtons>\r\n        <NoteUpdateButton onClick={() => handleUpdate(note.id)}>\r\n          <EditOutlinedIcon />\r\n        </NoteUpdateButton>\r\n        <NoteDeleteButton onClick={() => handleDelete(note.id)}>\r\n          <DeleteOutlineOutlinedIcon />\r\n        </NoteDeleteButton>\r\n      </NoteButtons>\r\n    </NoteContainer>\r\n  );\r\n}\r\n\r\nexport default OneNote;\r\n","C:\\Users\\yairi\\Desktop\\Yair\\Tasks\\RasApp\\client\\src\\components\\EquipmentRow.js",[],"C:\\Users\\yairi\\Desktop\\Yair\\Tasks\\RasApp\\client\\src\\styledComponents\\nohehutpage.js",[],"C:\\Users\\yairi\\Desktop\\Yair\\Tasks\\RasApp\\client\\src\\components\\PtorRow.js",["110"],"C:\\Users\\yairi\\Desktop\\Yair\\Tasks\\RasApp\\client\\src\\components\\Navbar.js",["111","112","113","114","115","116"],"import React, { useContext, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport { Link, NavLink, useHistory } from \"react-router-dom\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport network from \"../network\";\r\nimport {\r\n  HeaderContainer,\r\n  InnerHeaderContainer,\r\n  NavContainer,\r\n  InnerNavContainer,\r\n  NavTagList,\r\n  NavTag,\r\n  LogOutButton,\r\n  IconBox,\r\n} from \"../styledComponents/navbar\";\r\nimport { Logo } from \"../styledComponents/global\";\r\nimport ChildCareIcon from \"@material-ui/icons/ChildCare\";\r\nimport Cookies from \"js-cookie\";\r\nimport { User } from \"../context\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport RassAppLogo_Horizontal from \"../files/RassAppLogo_Horizontal.png\";\r\nfunction Navbar() {\r\n  const location = useHistory();\r\n  const gUser = useContext(User);\r\n\r\n  const [menuOpen, setMenuOpen] = useState(false);\r\n\r\n  const handleLogout = async () => {\r\n    const response = await network.post(`/api/auth/logout`, {\r\n      token: Cookies.get(\"refreshToken\"),\r\n    });\r\n\r\n    console.log(response);\r\n    Cookies.remove(\"refreshToken\");\r\n    gUser.setUser(null);\r\n    location.push(\"/login\");\r\n  };\r\n  const handleMenuClick = () => {\r\n    setMenuOpen(!menuOpen);\r\n  };\r\n\r\n  return (\r\n    <HeaderContainer>\r\n      <InnerHeaderContainer>\r\n        <NavContainer>\r\n          <IconBox onClick={() => handleMenuClick()}>\r\n            <MenuIcon />\r\n          </IconBox>\r\n          <InnerNavContainer isOpen={menuOpen}>\r\n            <NavTagList>\r\n              <NavTag onClick={() => location.push(\"/\")}>בית</NavTag>\r\n              <NavTag onClick={() => location.push(\"/soldiers\")}>חיילים</NavTag>\r\n              <NavTag onClick={() => location.push(\"/notes\")}>פתקים</NavTag>\r\n              {(gUser.user.roleId === 2 || gUser.user.roleId === 6) && (\r\n                <NavTag onClick={() => location.push(\"/nohehut\")}>\r\n                  נוכחות\r\n                </NavTag>\r\n              )}\r\n              <NavTag onClick={() => location.push(\"/calendar\")}>יומן</NavTag>\r\n              <NavTag onClick={() => location.push(\"/equipments\")}>ציוד</NavTag>\r\n              <NavTag onClick={() => location.push(\"/profile\")}>פרופיל</NavTag>\r\n            </NavTagList>\r\n          </InnerNavContainer>\r\n          <LogOutButton onClick={() => handleLogout()}>התנתק</LogOutButton>\r\n        </NavContainer>\r\n        <Logo src={RassAppLogo_Horizontal} alt=\"Logo\" />\r\n      </InnerHeaderContainer>\r\n    </HeaderContainer>\r\n  );\r\n}\r\n\r\n// const Nav = styled.div`\r\n//     background-color: #333 ;\r\n//     position: sticky ;\r\n//     top: 0 ;\r\n// `;\r\nexport default Navbar;\r\n","C:\\Users\\yairi\\Desktop\\Yair\\Tasks\\RasApp\\client\\src\\pages\\HomePage.js",["117"],"import { React, useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport \"../icons.css\";\r\nimport {\r\n  HomePageContainer,\r\n  HomePageInnerContainer,\r\n} from \"../styledComponents/homepage\";\r\nimport { HomePageBox, HomePageBoxTitle } from \"../styledComponents/homepage\";\r\nimport NoteIcon from \"@material-ui/icons/Note\";\r\nimport EventNoteIcon from \"@material-ui/icons/EventNote\";\r\nimport PermContactCalendarIcon from \"@material-ui/icons/PermContactCalendar\";\r\nimport FolderOpenIcon from \"@material-ui/icons/FolderOpen\";\r\nimport ListAltIcon from \"@material-ui/icons/ListAlt\";\r\n// import { Button } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { User } from \"../context\";\r\n\r\nfunction HomePage() {\r\n  const history = useHistory();\r\n  const gUser = useContext(User);\r\n\r\n  return (\r\n    <HomePageContainer>\r\n      <HomePageInnerContainer>\r\n        <HomePageBox onClick={() => history.push(\"/notes\")}>\r\n          <HomePageBoxTitle>פתקים</HomePageBoxTitle>\r\n          <NoteIcon className=\"iconsStyle\" />\r\n        </HomePageBox>\r\n        <HomePageBox onClick={() => history.push(\"/calendar\")}>\r\n          <HomePageBoxTitle>יומן</HomePageBoxTitle>\r\n\r\n          <EventNoteIcon className=\"iconsStyle\" />\r\n        </HomePageBox>\r\n        <HomePageBox onClick={() => history.push(\"/soldiers\")}>\r\n          <HomePageBoxTitle>חיילים</HomePageBoxTitle>\r\n          <PermContactCalendarIcon className=\"iconsStyle\" />\r\n        </HomePageBox>\r\n\r\n        {(gUser.user.roleId === 2 || gUser.user.roleId === 6) && (\r\n          <HomePageBox onClick={() => history.push(\"/nohehut\")}>\r\n            <HomePageBoxTitle>נוכחות</HomePageBoxTitle>\r\n            <ListAltIcon className=\"iconsStyle\" />\r\n          </HomePageBox>\r\n        )}\r\n\r\n        <HomePageBox onClick={() => history.push(\"/equipments\")}>\r\n          <HomePageBoxTitle>ציוד</HomePageBoxTitle>\r\n\r\n          <FolderOpenIcon className=\"iconsStyle\" />\r\n        </HomePageBox>\r\n      </HomePageInnerContainer>\r\n    </HomePageContainer>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","C:\\Users\\yairi\\Desktop\\Yair\\Tasks\\RasApp\\client\\src\\network.js",["118"],"import axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\nconst network = axios.create({});\r\n\r\nconst getToken = () => {\r\n  return Cookies.get(\"accessToken\");\r\n};\r\n\r\nnetwork.interceptors.request.use((config) => {\r\n  // Do something before request is sent\r\n  config.headers[\"authorization\"] = \"bearer \" + getToken();\r\n  return config;\r\n});\r\n\r\nnetwork.interceptors.response.use(\r\n  (response) => {\r\n    console.log(\"RESPONSE\", response);\r\n    return response;\r\n  },\r\n  async (error) => {\r\n    const status = error.response ? error.response.status : null;\r\n    const originalRequest = error.config;\r\n    if (status === 403) {\r\n      try {\r\n        const res = await network.post(\"/api/auth/token\", {\r\n          token: Cookies.get(\"refreshToken\")\r\n        });\r\n        const data = await network(originalRequest);\r\n        return data;\r\n      } catch (e) {\r\n        throw e;\r\n      }\r\n    } else {\r\n      throw error;\r\n    }\r\n  }\r\n);\r\n\r\nexport default network;\r\n","C:\\Users\\yairi\\Desktop\\Yair\\Tasks\\RasApp\\client\\src\\pages\\EquipmentsPage.js",["119","120","121","122","123","124"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport network from \"../network\";\r\nimport Modal from \"react-modal\";\r\nimport {\r\n  ParaContainer,\r\n  ParaTitle,\r\n  ParaAddButton,\r\n  ParaRows,\r\n  ModalContainer,\r\n  ModalTitle,\r\n  ModalButtons,\r\n  ModalButton,\r\n  Input,\r\n  Select,\r\n  Error,\r\n  ModalForm,\r\n} from \"../styledComponents/global\";\r\nimport { useContext } from \"react\";\r\nimport { User } from \"../context\";\r\nimport EquipmentRow from \"../components/EquipmentRow\";\r\nimport {\r\n  EquipmentsPageContainer,\r\n  EquipmentsPageInnerContainer,\r\n} from \"../styledComponents/equipmentspage\";\r\nimport { GlobalTable, Button, Title } from \"../styledComponents/global\";\r\n\r\nconst customStyles = {\r\n  content: {\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    right: \"auto\",\r\n    bottom: \"auto\",\r\n    marginRight: \"-50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n  },\r\n};\r\nModal.setAppElement(\"#root\");\r\nfunction EquipmentsPage() {\r\n  const [allEquipment, setAllEquipment] = useState();\r\n  const [equipments, setEquipments] = useState();\r\n  const selectCurrent = useRef(null);\r\n  const inputAmount = useRef(null);\r\n  const [modalIsOpen, setIsOpen] = useState(false);\r\n\r\n  const gUser = useContext(User);\r\n\r\n  function openModal() {\r\n    setIsOpen(true);\r\n  }\r\n  function closeModal(bool) {\r\n    bool &&\r\n      createEquipment(selectCurrent.current.value, inputAmount.current.value);\r\n    setIsOpen(false);\r\n  }\r\n\r\n  const getEquipments = async () => {\r\n    const { data } = await network.get(\"/api/equipments/user\");\r\n    setEquipments(data);\r\n  };\r\n  const createEquipment = async (equipment, amount) => {\r\n    const newEquipment = {\r\n      userId: gUser.user.userId,\r\n      equipmentId: equipment,\r\n      amount: amount,\r\n    };\r\n    const response = await network.post(\"/api/equipments\", newEquipment);\r\n    console.log(response)\r\n    getEquipments();\r\n\r\n  };\r\n\r\n  const getAllEquipment = async () => {\r\n    const { data } = await network.get(\"/api/equipments\");\r\n    setAllEquipment(data);\r\n  };\r\n  const handleDelete = async (id) => {\r\n    const response = await network.delete(`/api/equipments/${id}`);\r\n    console.log(response);\r\n    getEquipments();\r\n  };\r\n\r\n  useEffect(() => {\r\n    getEquipments();\r\n  }, []);\r\n  return (\r\n    // <EquipmentsPageContainer>\r\n    //   <Title>ציוד</Title>\r\n    //   {/* <Button onClick={openModal}>הוסף פתק חדש</Button> */}\r\n    //   <GlobalTable>\r\n    //     {equipments &&\r\n    //       equipments.map((equipment, i) => {\r\n    //         return <EquipmentRow equipment={equipment} key={i} />;\r\n    //       })}\r\n    //   </GlobalTable>\r\n    // </EquipmentsPageContainer>\r\n    <>\r\n      <ParaContainer>\r\n        <ParaTitle>ציוד</ParaTitle>\r\n        <ParaAddButton onClick={openModal}>+</ParaAddButton>\r\n        <ParaRows>\r\n          {equipments &&\r\n            equipments.map((equipment, i) => {\r\n              return (\r\n                <EquipmentRow\r\n                  handleDelete={handleDelete}\r\n                  equipment={equipment}\r\n                  key={i}\r\n                />\r\n              );\r\n            })}\r\n        </ParaRows>\r\n        <Modal\r\n          isOpen={modalIsOpen}\r\n          onAfterOpen={() => getAllEquipment()}\r\n          onRequestClose={closeModal}\r\n          style={customStyles}\r\n          contentLabel=\"CreateEquipment\"\r\n        >\r\n          <ModalContainer>\r\n            <ModalTitle>ציוד חדש</ModalTitle>\r\n            <ModalForm>\r\n              <Select ref={selectCurrent}>\r\n                {allEquipment &&\r\n                  allEquipment.map((equipment, i) => {\r\n                    return (\r\n                      <option value={`${equipment.id}`}>\r\n                        {equipment.equipmentName}\r\n                      </option>\r\n                    );\r\n                  })}\r\n              </Select>\r\n              <Input ref={inputAmount} placeholder=\"כמות\"></Input>\r\n              <ModalButtons>\r\n                <ModalButton onClick={() => closeModal(true)}>שלח</ModalButton>\r\n                <ModalButton onClick={() => closeModal(false)}>בטל</ModalButton>\r\n              </ModalButtons>\r\n            </ModalForm>\r\n          </ModalContainer>\r\n        </Modal>\r\n      </ParaContainer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EquipmentsPage;\r\n","C:\\Users\\yairi\\Desktop\\Yair\\Tasks\\RasApp\\client\\src\\styledComponents\\notfound.js",[],"C:\\Users\\yairi\\Desktop\\Yair\\Tasks\\RasApp\\client\\src\\components\\Exams.js",["125","126","127","128"],"C:\\Users\\yairi\\Desktop\\Yair\\Tasks\\RasApp\\client\\src\\styledComponents\\global.js",[],"C:\\Users\\yairi\\Desktop\\Yair\\Tasks\\RasApp\\client\\src\\components\\CertificationRow.js",["129"],"C:\\Users\\yairi\\Desktop\\Yair\\Tasks\\RasApp\\client\\src\\pages\\LoginPage.js",["130","131"],"import network from \"../network\";\r\nimport React, { useRef, useContext, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  LoginPageContainer,\r\n  LoginFormContainer,\r\n  InnerLoginFormContainer,\r\n} from \"../styledComponents/loginpage\";\r\nimport { Input, Button , Error} from \"../styledComponents/global\";\r\n// import { Button, TextField, InputAdornment } from \"@material-ui/core\";\r\nimport AccountBoxIcon from \"@material-ui/icons/AccountBox\";\r\nimport LockIcon from \"@material-ui/icons/Lock\";\r\nimport { User } from \"../context\";\r\nfunction LoginPage() {\r\n  const location = useHistory();\r\n\r\n  const [isError,setIsError] = useState(false);\r\n  const usernameRef = useRef(null);\r\n  const passwordRef = useRef(null);\r\n\r\n  const gUser = useContext(User);\r\n\r\n  const handleLogin = async () => {\r\n    try {\r\n      const user = {\r\n        username: usernameRef.current.value,\r\n        password: passwordRef.current.value,\r\n      };\r\n      const { data } = await network.post(`/api/auth/login`, user);\r\n      console.log(data);\r\n      gUser.setUser(data);\r\n      location.push(\"/\");\r\n    } catch (e) {\r\n      console.log(e);\r\n      setIsError(true)\r\n    }\r\n  };\r\n  return (\r\n    <LoginPageContainer>\r\n      <LoginFormContainer>\r\n        <InnerLoginFormContainer>\r\n          <Input ref={usernameRef} placeholder=\"מספר אישי\"></Input>\r\n          <Input type=\"password\" ref={passwordRef} placeholder=\"סיסמא\"></Input>\r\n          <Button onClick={() => handleLogin()}>התחבר</Button>\r\n          \r\n            <Error>{isError && '*אחד או יותר מהשדות אינם נכונים'}</Error>\r\n          \r\n        </InnerLoginFormContainer>\r\n      </LoginFormContainer>\r\n    </LoginPageContainer>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n","C:\\Users\\yairi\\Desktop\\Yair\\Tasks\\RasApp\\client\\src\\components\\Certifications.js",["132","133","134","135","136","137"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Modal from \"react-modal\";\r\nimport network from \"../network\";\r\nimport styled from \"styled-components\";\r\nimport CertificationRow from \"./CertificationRow\";\r\nimport {\r\n  ParaContainer,\r\n  ParaTitle,\r\n  ParaAddButton,\r\n  ParaRows,\r\n  ModalContainer,\r\n  ModalTitle,\r\n  ModalButtons,\r\n  ModalButton,\r\n  Input,\r\n  Select,\r\n  ModalForm,\r\n} from \"../styledComponents/global\";\r\nconst customStyles = {\r\n  content: {\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    right: \"auto\",\r\n    bottom: \"auto\",\r\n    marginRight: \"-50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n  },\r\n};\r\nModal.setAppElement(\"#root\");\r\n\r\nfunction Certifications({ soldierId }) {\r\n  const selectCurrent = useRef(null);\r\n  const [certifications, setCertifications] = useState([]);\r\n  const [myCertifications, setMyCertifications] = useState([]);\r\n  const [modalIsOpen, setIsOpen] = useState(false);\r\n\r\n  function openModal() {\r\n    setIsOpen(true);\r\n  }\r\n  function closeModal(bool) {\r\n    bool && createCertification(selectCurrent.current.value);\r\n    setIsOpen(false);\r\n  }\r\n  const getCertificationsBySoldierId = async () => {\r\n    const { data } = await network.get(\r\n      `/api/certifications/soldier/${soldierId}`\r\n    );\r\n    console.log(data);\r\n    setMyCertifications(data);\r\n  };\r\n  const createCertification = async (certificationId) => {\r\n    console.log(\"creating new certification\");\r\n    const newCertification = {\r\n      certificationId: certificationId,\r\n      soldierId: soldierId,\r\n    };\r\n    const response = await network.post(\r\n      `/api/certifications`,\r\n      newCertification\r\n    );\r\n    console.log(response);\r\n    getCertificationsBySoldierId();\r\n  };\r\n  const getInfoAbout = async () => {\r\n    const { data } = await network.get(`/api/certifications`);\r\n    setCertifications(data);\r\n  };\r\n  const handleDelete = async (id) => {\r\n    const response = await network.delete(`/api/certifications/${id}`);\r\n    console.log(response);\r\n    getCertificationsBySoldierId();\r\n  };\r\n  useEffect(() => {\r\n    getCertificationsBySoldierId();\r\n  }, []);\r\n\r\n  return (\r\n    <ParaContainer>\r\n      <ParaTitle>הסמכות</ParaTitle>\r\n      <ParaAddButton onClick={openModal}>+</ParaAddButton>\r\n      <ParaRows>\r\n        {myCertifications.map((certification, i) => {\r\n          return <CertificationRow handleDelete={handleDelete} certification={certification} />;\r\n        })}\r\n      </ParaRows>\r\n      <Modal\r\n        isOpen={modalIsOpen}\r\n        onAfterOpen={() => getInfoAbout()}\r\n        onRequestClose={closeModal}\r\n        style={customStyles}\r\n        contentLabel=\"CreateCertification\"\r\n      >\r\n        <ModalContainer>\r\n          <ModalTitle>הסמכה חדשה</ModalTitle>\r\n          <ModalForm>\r\n            <Select ref={selectCurrent}>\r\n              {certifications.map((certification, i) => {\r\n                return (\r\n                  <option value={`${certification.id}`}>\r\n                    {certification.certificationName}\r\n                  </option>\r\n                );\r\n              })}\r\n            </Select>\r\n            <ModalButtons>\r\n              <ModalButton onClick={() => closeModal(true)}>שלח</ModalButton>\r\n              <ModalButton onClick={() => closeModal(false)}>בטל</ModalButton>\r\n            </ModalButtons>\r\n          </ModalForm>\r\n        </ModalContainer>\r\n      </Modal>\r\n    </ParaContainer>\r\n  );\r\n}\r\n\r\nconst ParaCon = styled.div`\r\n  min-height: 15vh;\r\n  width: 90vw;\r\n  margin-top: 2vh;\r\n  border: 1px solid white;\r\n`;\r\nconst Title = styled.div`\r\n  width: 100%;\r\n  height: 3vh;\r\n  background-color: #444;\r\n  padding: 0.5em 0;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n`;\r\n\r\nconst Button = styled.button``;\r\nexport default Certifications;\r\n","C:\\Users\\yairi\\Desktop\\Yair\\Tasks\\RasApp\\client\\src\\pages\\SoldiersPage.js",["138"],"C:\\Users\\yairi\\Desktop\\Yair\\Tasks\\RasApp\\client\\src\\components\\Ptors.js",["139","140","141","142"],"C:\\Users\\yairi\\Desktop\\Yair\\Tasks\\RasApp\\client\\src\\styledComponents\\loginpage.js",[],{"ruleId":"143","severity":1,"message":"144","line":1,"column":38,"nodeType":"145","messageId":"146","endLine":1,"endColumn":48},{"ruleId":"143","severity":1,"message":"147","line":1,"column":50,"nodeType":"145","messageId":"146","endLine":1,"endColumn":54},{"ruleId":"143","severity":1,"message":"148","line":7,"column":3,"nodeType":"145","messageId":"146","endLine":7,"endColumn":13},{"ruleId":"143","severity":1,"message":"149","line":10,"column":8,"nodeType":"145","messageId":"146","endLine":10,"endColumn":14},{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","replacedBy":"153"},{"ruleId":"143","severity":1,"message":"149","line":4,"column":8,"nodeType":"145","messageId":"146","endLine":4,"endColumn":14},{"ruleId":"143","severity":1,"message":"154","line":11,"column":3,"nodeType":"145","messageId":"146","endLine":11,"endColumn":9},{"ruleId":"143","severity":1,"message":"155","line":18,"column":3,"nodeType":"145","messageId":"146","endLine":18,"endColumn":9},{"ruleId":"143","severity":1,"message":"156","line":22,"column":8,"nodeType":"145","messageId":"146","endLine":22,"endColumn":19},{"ruleId":"150","replacedBy":"157"},{"ruleId":"152","replacedBy":"158"},{"ruleId":"150","replacedBy":"159"},{"ruleId":"152","replacedBy":"160"},{"ruleId":"143","severity":1,"message":"149","line":2,"column":8,"nodeType":"145","messageId":"146","endLine":2,"endColumn":14},{"ruleId":"143","severity":1,"message":"148","line":13,"column":10,"nodeType":"145","messageId":"146","endLine":13,"endColumn":20},{"ruleId":"143","severity":1,"message":"149","line":2,"column":8,"nodeType":"145","messageId":"146","endLine":2,"endColumn":14},{"ruleId":"143","severity":1,"message":"149","line":2,"column":8,"nodeType":"145","messageId":"146","endLine":2,"endColumn":14},{"ruleId":"143","severity":1,"message":"161","line":3,"column":8,"nodeType":"145","messageId":"146","endLine":3,"endColumn":16},{"ruleId":"143","severity":1,"message":"162","line":4,"column":10,"nodeType":"145","messageId":"146","endLine":4,"endColumn":14},{"ruleId":"143","severity":1,"message":"163","line":4,"column":16,"nodeType":"145","messageId":"146","endLine":4,"endColumn":23},{"ruleId":"143","severity":1,"message":"154","line":5,"column":10,"nodeType":"145","messageId":"146","endLine":5,"endColumn":16},{"ruleId":"143","severity":1,"message":"164","line":18,"column":8,"nodeType":"145","messageId":"146","endLine":18,"endColumn":21},{"ruleId":"143","severity":1,"message":"149","line":2,"column":8,"nodeType":"145","messageId":"146","endLine":2,"endColumn":14},{"ruleId":"143","severity":1,"message":"165","line":25,"column":15,"nodeType":"145","messageId":"146","endLine":25,"endColumn":18},{"ruleId":"143","severity":1,"message":"166","line":15,"column":3,"nodeType":"145","messageId":"146","endLine":15,"endColumn":8},{"ruleId":"143","severity":1,"message":"167","line":22,"column":3,"nodeType":"145","messageId":"146","endLine":22,"endColumn":26},{"ruleId":"143","severity":1,"message":"168","line":23,"column":3,"nodeType":"145","messageId":"146","endLine":23,"endColumn":31},{"ruleId":"143","severity":1,"message":"169","line":25,"column":10,"nodeType":"145","messageId":"146","endLine":25,"endColumn":21},{"ruleId":"143","severity":1,"message":"154","line":25,"column":23,"nodeType":"145","messageId":"146","endLine":25,"endColumn":29},{"ruleId":"143","severity":1,"message":"170","line":25,"column":31,"nodeType":"145","messageId":"146","endLine":25,"endColumn":36},{"ruleId":"143","severity":1,"message":"171","line":2,"column":8,"nodeType":"145","messageId":"146","endLine":2,"endColumn":16},{"ruleId":"143","severity":1,"message":"149","line":5,"column":8,"nodeType":"145","messageId":"146","endLine":5,"endColumn":14},{"ruleId":"143","severity":1,"message":"166","line":18,"column":3,"nodeType":"145","messageId":"146","endLine":18,"endColumn":8},{"ruleId":"172","severity":1,"message":"173","line":74,"column":6,"nodeType":"174","endLine":74,"endColumn":8,"suggestions":"175"},{"ruleId":"143","severity":1,"message":"149","line":2,"column":8,"nodeType":"145","messageId":"146","endLine":2,"endColumn":14},{"ruleId":"143","severity":1,"message":"176","line":11,"column":8,"nodeType":"145","messageId":"146","endLine":11,"endColumn":22},{"ruleId":"143","severity":1,"message":"177","line":12,"column":8,"nodeType":"145","messageId":"146","endLine":12,"endColumn":16},{"ruleId":"143","severity":1,"message":"171","line":2,"column":8,"nodeType":"145","messageId":"146","endLine":2,"endColumn":16},{"ruleId":"143","severity":1,"message":"178","line":16,"column":3,"nodeType":"145","messageId":"146","endLine":16,"endColumn":8},{"ruleId":"172","severity":1,"message":"179","line":76,"column":6,"nodeType":"174","endLine":76,"endColumn":8,"suggestions":"180"},{"ruleId":"143","severity":1,"message":"181","line":117,"column":7,"nodeType":"145","messageId":"146","endLine":117,"endColumn":14},{"ruleId":"143","severity":1,"message":"182","line":123,"column":7,"nodeType":"145","messageId":"146","endLine":123,"endColumn":12},{"ruleId":"143","severity":1,"message":"183","line":133,"column":7,"nodeType":"145","messageId":"146","endLine":133,"endColumn":13},{"ruleId":"143","severity":1,"message":"149","line":2,"column":8,"nodeType":"145","messageId":"146","endLine":2,"endColumn":14},{"ruleId":"143","severity":1,"message":"171","line":2,"column":8,"nodeType":"145","messageId":"146","endLine":2,"endColumn":16},{"ruleId":"143","severity":1,"message":"149","line":5,"column":8,"nodeType":"145","messageId":"146","endLine":5,"endColumn":14},{"ruleId":"172","severity":1,"message":"184","line":86,"column":6,"nodeType":"174","endLine":86,"endColumn":8,"suggestions":"185"},{"ruleId":"186","severity":1,"message":"187","line":90,"column":26,"nodeType":"188","messageId":"189","endLine":90,"endColumn":28},"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'lazy' is defined but never used.","'useHistory' is defined but never used.","'styled' is defined but never used.","no-native-reassign",["190"],"no-negated-in-lhs",["191"],"'Button' is defined but never used.","'Select' is defined but never used.","'NoteAddIcon' is defined but never used.",["190"],["191"],["190"],["191"],"'HomeIcon' is defined but never used.","'Link' is defined but never used.","'NavLink' is defined but never used.","'ChildCareIcon' is defined but never used.","'res' is assigned a value but never used.","'Error' is defined but never used.","'EquipmentsPageContainer' is defined but never used.","'EquipmentsPageInnerContainer' is defined but never used.","'GlobalTable' is defined but never used.","'Title' is defined but never used.","'ReactDOM' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getExamsBySoldierId'. Either include it or remove the dependency array.","ArrayExpression",["192"],"'AccountBoxIcon' is defined but never used.","'LockIcon' is defined but never used.","'Input' is defined but never used.","React Hook useEffect has a missing dependency: 'getCertificationsBySoldierId'. Either include it or remove the dependency array.",["193"],"'ParaCon' is assigned a value but never used.","'Title' is assigned a value but never used.","'Button' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getPtorsBySoldierId'. Either include it or remove the dependency array.",["194"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"195","fix":"196"},{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},"Update the dependencies array to be: [getExamsBySoldierId]",{"range":"201","text":"202"},"Update the dependencies array to be: [getCertificationsBySoldierId]",{"range":"203","text":"204"},"Update the dependencies array to be: [getPtorsBySoldierId]",{"range":"205","text":"206"},[1940,1942],"[getExamsBySoldierId]",[2125,2127],"[getCertificationsBySoldierId]",[2257,2259],"[getPtorsBySoldierId]"]